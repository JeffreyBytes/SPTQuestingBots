using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;
using SPT.Reflection.Patching;
using EFT;
using SPTQuestingBots.Controllers;

namespace SPTQuestingBots.Patches
{
    public class IsFollowerSuitableForBossPatch : ModulePatch
    {
        private static readonly IReadOnlyCollection<Profile> emptyProfileCollection = new Profile[0];

        protected override MethodBase GetTargetMethod()
        {
            return typeof(BotBoss).GetMethod("OfferSelf", BindingFlags.Public | BindingFlags.Instance);
        }

        [PatchPrefix]
        protected static bool PatchPrefix(ref bool __result, BotBoss __instance, BotOwner offer)
        {
            // EFT sometimes instructs bots ask themselves to be followers of themselves. I guess they're really lonely, so we'll allow it.  
            if (__instance.Owner.Profile.Id == offer.Profile.Id)
            {
                return true;
            }

            IReadOnlyCollection<Profile> bossGroupMemberProfiles = emptyProfileCollection;
            if (Components.Spawning.BotGenerator.TryGetBotGroupFromAnyGenerator(__instance.Owner, out Models.BotSpawnInfo botSpawnInfo))
            {
                bossGroupMemberProfiles = botSpawnInfo.GetGeneratedProfiles();
            }

            IReadOnlyCollection<Profile> offerGroupMemberProfiles = emptyProfileCollection;
            if (Components.Spawning.BotGenerator.TryGetBotGroupFromAnyGenerator(offer, out botSpawnInfo))
            {
                offerGroupMemberProfiles = botSpawnInfo.GetGeneratedProfiles();
            }

            Controllers.LoggingController.LogInfo(__instance.Owner.GetText() + "'s group contains: " + string.Join(",", bossGroupMemberProfiles.Select(m => m.Id)));
            Controllers.LoggingController.LogInfo(offer.GetText() + "'s group contains: " + string.Join(",", offerGroupMemberProfiles.Select(m => m.Id)));

            // If neither the boss nor the offer were spawned in the bot groups generated by this mod, run the EFT code
            if ((bossGroupMemberProfiles.Count == 0) && (offerGroupMemberProfiles.Count == 0))
            {
                return true;
            }

            // Allow the offer to join the boss's group if it spawned in that group
            if (bossGroupMemberProfiles.Any(m => m.Id == offer.Profile.Id))
            {
                return true;
            }

            Controllers.LoggingController.LogInfo("Preventing " + offer.GetText() + " from becoming a follower for " + __instance.Owner.GetText());

            __result = false;
            return false;
        }
    }
}
